<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.1" type="baseline" client="gradle" dependencies="false" name="AGP (8.1.1)" variant="all" version="8.1.1">

    <issue
        id="AutoboxingStateCreation"
        message="Prefer `mutableFloatStateOf` instead of `mutableStateOf`"
        errorLine1="    var customExchangeRatePosition by remember { mutableStateOf(0F) }"
        errorLine2="                                                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/transaction/EditTransactionScreen.kt"
            line="234"
            column="50"/>
    </issue>

    <issue
        id="ComposeParameterOrder"
        message="Parameters in a composable function should be ordered following this pattern: params without defaults, modifiers, params with defaults and optionally, a trailing function that might not have a default param.&#xA;Current params are: [screen: EditTransactionScreen, transactionType: TransactionType, baseCurrency: String, initialTitle: String?, titleSuggestions: Set&lt;String>, description: String?, category: Category?, dateTime: LocalDateTime?, account: Account?, toAccount: Account?, dueDate: LocalDateTime?, amount: Double, loanData: EditTransactionDisplayLoan = EditTransactionDisplayLoan(), backgroundProcessing: Boolean = false, customExchangeRateState: CustomExchangeRateState, categories: List&lt;Category>, accounts: List&lt;Account>, hasChanges: Boolean = false, onTitleChanged: (String?) -> Unit, onDescriptionChanged: (String?) -> Unit, onAmountChanged: (Double) -> Unit, onCategoryChanged: (Category?) -> Unit, onAccountChanged: (Account) -> Unit, onToAccountChanged: (Account) -> Unit, onDueDateChanged: (LocalDateTime?) -> Unit, onSetDateTime: (LocalDateTime) -> Unit, onSetTransactionType: (TransactionType) -> Unit, onCreateCategory: (CreateCategoryData) -> Unit, onEditCategory: (Category) -> Unit, onPayPlannedPayment: () -> Unit, onSave: (closeScreen: Boolean) -> Unit, onSetHasChanges: (hasChanges: Boolean) -> Unit, onDelete: () -> Unit, onCreateAccount: (CreateAccountData) -> Unit, onExchangeRateChanged: (Double?) -> Unit = { }] but should be [screen: EditTransactionScreen, transactionType: TransactionType, baseCurrency: String, initialTitle: String?, titleSuggestions: Set&lt;String>, description: String?, category: Category?, dateTime: LocalDateTime?, account: Account?, toAccount: Account?, dueDate: LocalDateTime?, amount: Double, customExchangeRateState: CustomExchangeRateState, categories: List&lt;Category>, accounts: List&lt;Account>, onTitleChanged: (String?) -> Unit, onDescriptionChanged: (String?) -> Unit, onAmountChanged: (Double) -> Unit, onCategoryChanged: (Category?) -> Unit, onAccountChanged: (Account) -> Unit, onToAccountChanged: (Account) -> Unit, onDueDateChanged: (LocalDateTime?) -> Unit, onSetDateTime: (LocalDateTime) -> Unit, onSetTransactionType: (TransactionType) -> Unit, onCreateCategory: (CreateCategoryData) -> Unit, onEditCategory: (Category) -> Unit, onPayPlannedPayment: () -> Unit, onSave: (closeScreen: Boolean) -> Unit, onSetHasChanges: (hasChanges: Boolean) -> Unit, onDelete: () -> Unit, onCreateAccount: (CreateAccountData) -> Unit, loanData: EditTransactionDisplayLoan = EditTransactionDisplayLoan(), backgroundProcessing: Boolean = false, hasChanges: Boolean = false, onExchangeRateChanged: (Double?) -> Unit = { }].&#xA;See https://slackhq.github.io/compose-lints/rules/#ordering-composable-parameters-properly for more information."
        errorLine1="@ExperimentalFoundationApi"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/transaction/EditTransactionScreen.kt"
            line="159"
            column="1"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a Set&lt;String> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `titleSuggestions: ImmutableSet&lt;String>` or create an `@Immutable` wrapper for this class: `@Immutable data class TitleSuggestionsSet(val items: Set&lt;String>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    titleSuggestions: Set&lt;String>,"
        errorLine2="                      ~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/transaction/EditTransactionScreen.kt"
            line="166"
            column="23"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `categories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class CategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    categories: List&lt;Category>,"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/transaction/EditTransactionScreen.kt"
            line="178"
            column="17"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `accounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    accounts: List&lt;Account>,"
        errorLine2="              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/transaction/EditTransactionScreen.kt"
            line="179"
            column="15"/>
    </issue>

</issues>
