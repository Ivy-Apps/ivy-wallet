<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.1" type="baseline" client="gradle" dependencies="false" name="AGP (8.1.1)" variant="all" version="8.1.1">

    <issue
        id="ComposeContentEmitterReturningValues"
        message="Composable functions should either emit content into the composition or return a value, but not both.&#xA;If a composable should offer additional control surfaces to its caller, those control surfaces or callbacks should be provided as parameters to the composable function by the caller.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-content-and-return-a-result for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="361"
            column="1"/>
    </issue>

    <issue
        id="ComposeContentEmitterReturningValues"
        message="Composable functions should either emit content into the composition or return a value, but not both.&#xA;If a composable should offer additional control surfaces to its caller, those control surfaces or callbacks should be provided as parameters to the composable function by the caller.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-content-and-return-a-result for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="443"
            column="1"/>
    </issue>

    <issue
        id="ComposeContentEmitterReturningValues"
        message="Composable functions should either emit content into the composition or return a value, but not both.&#xA;If a composable should offer additional control surfaces to its caller, those control surfaces or callbacks should be provided as parameters to the composable function by the caller.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-content-and-return-a-result for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="470"
            column="1"/>
    </issue>

    <issue
        id="ComposeContentEmitterReturningValues"
        message="Composable functions should either emit content into the composition or return a value, but not both.&#xA;If a composable should offer additional control surfaces to its caller, those control surfaces or callbacks should be provided as parameters to the composable function by the caller.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-content-and-return-a-result for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="538"
            column="1"/>
    </issue>

    <issue
        id="ComposeContentEmitterReturningValues"
        message="Composable functions should either emit content into the composition or return a value, but not both.&#xA;If a composable should offer additional control surfaces to its caller, those control surfaces or callbacks should be provided as parameters to the composable function by the caller.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-content-and-return-a-result for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="649"
            column="1"/>
    </issue>

    <issue
        id="ComposeContentEmitterReturningValues"
        message="Composable functions should either emit content into the composition or return a value, but not both.&#xA;If a composable should offer additional control surfaces to its caller, those control surfaces or callbacks should be provided as parameters to the composable function by the caller.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-content-and-return-a-result for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="712"
            column="1"/>
    </issue>

    <issue
        id="ComposeContentEmitterReturningValues"
        message="Composable functions should either emit content into the composition or return a value, but not both.&#xA;If a composable should offer additional control surfaces to its caller, those control surfaces or callbacks should be provided as parameters to the composable function by the caller.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-content-and-return-a-result for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="841"
            column="1"/>
    </issue>

    <issue
        id="ComposeModifierMissing"
        message="This @Composable function emits content but doesn&apos;t have a modifier parameter.&#xA;See https://slackhq.github.io/compose-lints/rules/#when-should-i-expose-modifier-parameters for more information."
        errorLine1="fun BoxWithConstraintsScope.FilterOverlay("
        errorLine2="                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="75"
            column="29"/>
    </issue>

    <issue
        id="ComposeMultipleContentEmitters"
        message="Composable functions should only be emitting content into the composition from one source at their top level.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-multiple-pieces-of-content for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="361"
            column="1"/>
    </issue>

    <issue
        id="ComposeMultipleContentEmitters"
        message="Composable functions should only be emitting content into the composition from one source at their top level.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-multiple-pieces-of-content for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="443"
            column="1"/>
    </issue>

    <issue
        id="ComposeMultipleContentEmitters"
        message="Composable functions should only be emitting content into the composition from one source at their top level.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-multiple-pieces-of-content for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="470"
            column="1"/>
    </issue>

    <issue
        id="ComposeMultipleContentEmitters"
        message="Composable functions should only be emitting content into the composition from one source at their top level.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-multiple-pieces-of-content for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="538"
            column="1"/>
    </issue>

    <issue
        id="ComposeMultipleContentEmitters"
        message="Composable functions should only be emitting content into the composition from one source at their top level.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-multiple-pieces-of-content for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="649"
            column="1"/>
    </issue>

    <issue
        id="ComposeMultipleContentEmitters"
        message="Composable functions should only be emitting content into the composition from one source at their top level.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-multiple-pieces-of-content for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="712"
            column="1"/>
    </issue>

    <issue
        id="ComposeMultipleContentEmitters"
        message="Composable functions should only be emitting content into the composition from one source at their top level.&#xA;See https://slackhq.github.io/compose-lints/rules/#do-not-emit-multiple-pieces-of-content for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="841"
            column="1"/>
    </issue>

    <issue
        id="ComposeParameterOrder"
        message="Parameters in a composable function should be ordered following this pattern: params without defaults, modifiers, params with defaults and optionally, a trailing function that might not have a default param.&#xA;Current params are: [modifier: Modifier = Modifier, trnType: TransactionType, filter: ReportFilter?, nonFilter: (ReportFilter?) -> ReportFilter, onSetFilter: (ReportFilter) -> Unit] but should be [trnType: TransactionType, filter: ReportFilter?, nonFilter: (ReportFilter?) -> ReportFilter, modifier: Modifier = Modifier, onSetFilter: (ReportFilter) -> Unit].&#xA;See https://slackhq.github.io/compose-lints/rules/#ordering-composable-parameters-properly for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="408"
            column="1"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `accounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    accounts: List&lt;Account>,"
        errorLine2="              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="79"
            column="15"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `categories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class CategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    categories: List&lt;Category>,"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="80"
            column="17"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `allAccounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AllAccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    allAccounts: List&lt;Account>,"
        errorLine2="                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="472"
            column="18"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `allCategories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class AllCategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    allCategories: List&lt;Category>,"
        errorLine2="                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/reports/FilterOverlay.kt"
            line="540"
            column="20"/>
    </issue>

</issues>
