<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.1" type="baseline" client="gradle" dependencies="false" name="AGP (8.1.1)" variant="all" version="8.1.1">

    <issue
        id="ComposeModifierMissing"
        message="This @Composable function emits content but doesn&apos;t have a modifier parameter.&#xA;See https://slackhq.github.io/compose-lints/rules/#when-should-i-expose-modifier-parameters for more information."
        errorLine1="fun LazyItemScope.PlannedPaymentCard("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentCard.kt"
            line="54"
            column="19"/>
    </issue>

    <issue
        id="ComposeModifierMissing"
        message="This @Composable function emits content but doesn&apos;t have a modifier parameter.&#xA;See https://slackhq.github.io/compose-lints/rules/#when-should-i-expose-modifier-parameters for more information."
        errorLine1="fun BoxWithConstraintsScope.PlannedPaymentsBottomBar("
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsBottomBar.kt"
            line="24"
            column="29"/>
    </issue>

    <issue
        id="ComposeModifierMissing"
        message="This @Composable function emits content but doesn&apos;t have a modifier parameter.&#xA;See https://slackhq.github.io/compose-lints/rules/#when-should-i-expose-modifier-parameters for more information."
        errorLine1="fun PlannedPaymentsLazyColumn("
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsLazyColumn.kt"
            line="43"
            column="5"/>
    </issue>

    <issue
        id="ComposeParameterOrder"
        message="Parameters in a composable function should be ordered following this pattern: params without defaults, modifiers, params with defaults and optionally, a trailing function that might not have a default param.&#xA;Current params are: [screen: EditPlannedScreen, startDate: LocalDateTime?, intervalN: Int?, intervalType: IntervalType?, oneTime: Boolean, type: TransactionType, currency: String, initialTitle: String?, description: String?, category: Category?, account: Account?, amount: Double, categories: List&lt;Category>, accounts: List&lt;Account>, onRuleChanged: (LocalDateTime, oneTime: Boolean, Int?, IntervalType?) -> Unit, onTitleChanged: (String?) -> Unit, onDescriptionChanged: (String?) -> Unit, onAmountChanged: (Double) -> Unit, onCategoryChanged: (Category?) -> Unit, onAccountChanged: (Account) -> Unit, onSetTransactionType: (TransactionType) -> Unit, onCreateCategory: (CreateCategoryData) -> Unit = {}, onSave: () -> Unit, onDelete: () -> Unit, onCreateAccount: (CreateAccountData) -> Unit = {}] but should be [screen: EditPlannedScreen, startDate: LocalDateTime?, intervalN: Int?, intervalType: IntervalType?, oneTime: Boolean, type: TransactionType, currency: String, initialTitle: String?, description: String?, category: Category?, account: Account?, amount: Double, categories: List&lt;Category>, accounts: List&lt;Account>, onRuleChanged: (LocalDateTime, oneTime: Boolean, Int?, IntervalType?) -> Unit, onTitleChanged: (String?) -> Unit, onDescriptionChanged: (String?) -> Unit, onAmountChanged: (Double) -> Unit, onCategoryChanged: (Category?) -> Unit, onAccountChanged: (Account) -> Unit, onSetTransactionType: (TransactionType) -> Unit, onSave: () -> Unit, onDelete: () -> Unit, onCreateCategory: (CreateCategoryData) -> Unit = {}, onCreateAccount: (CreateAccountData) -> Unit = {}].&#xA;See https://slackhq.github.io/compose-lints/rules/#ordering-composable-parameters-properly for more information."
        errorLine1="/**"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/planned/edit/EditPlannedScreen.kt"
            line="112"
            column="1"/>
    </issue>

    <issue
        id="ComposeParameterOrder"
        message="Parameters in a composable function should be ordered following this pattern: params without defaults, modifiers, params with defaults and optionally, a trailing function that might not have a default param.&#xA;Current params are: [bottomInset: Dp = navigationBarInset().toDensityDp(), onClose: () -> Unit, onAdd: () -> Unit] but should be [onClose: () -> Unit, bottomInset: Dp = navigationBarInset().toDensityDp(), onAdd: () -> Unit].&#xA;See https://slackhq.github.io/compose-lints/rules/#ordering-composable-parameters-properly for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsBottomBar.kt"
            line="23"
            column="1"/>
    </issue>

    <issue
        id="ComposeParameterOrder"
        message="Parameters in a composable function should be ordered following this pattern: params without defaults, modifiers, params with defaults and optionally, a trailing function that might not have a default param.&#xA;Current params are: [Header: @Composable () -> Unit, currency: String, categories: List&lt;Category>, accounts: List&lt;Account>, listState: LazyListState = rememberLazyListState(), oneTime: List&lt;PlannedPaymentRule>, oneTimeIncome: Double, oneTimeExpenses: Double, recurring: List&lt;PlannedPaymentRule>, recurringIncome: Double, recurringExpenses: Double] but should be [Header: @Composable () -> Unit, currency: String, categories: List&lt;Category>, accounts: List&lt;Account>, oneTime: List&lt;PlannedPaymentRule>, oneTimeIncome: Double, oneTimeExpenses: Double, recurring: List&lt;PlannedPaymentRule>, recurringIncome: Double, recurringExpenses: Double, listState: LazyListState = rememberLazyListState()].&#xA;See https://slackhq.github.io/compose-lints/rules/#ordering-composable-parameters-properly for more information."
        errorLine1="@Composable"
        errorLine2="^">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsLazyColumn.kt"
            line="42"
            column="1"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `categories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class CategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    categories: List&lt;Category>,"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/edit/EditPlannedScreen.kt"
            line="135"
            column="17"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `accounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    accounts: List&lt;Account>,"
        errorLine2="              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/edit/EditPlannedScreen.kt"
            line="136"
            column="15"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `categories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class CategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    categories: List&lt;Category>,"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentCard.kt"
            line="56"
            column="17"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `accounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    accounts: List&lt;Account>,"
        errorLine2="              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentCard.kt"
            line="57"
            column="15"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `categories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class CategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    categories: List&lt;Category>,"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentCard.kt"
            line="124"
            column="17"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `accounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    accounts: List&lt;Account>"
        errorLine2="              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentCard.kt"
            line="125"
            column="15"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `categories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class CategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    categories: List&lt;Category>,"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsLazyColumn.kt"
            line="47"
            column="17"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `accounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    accounts: List&lt;Account>,"
        errorLine2="              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsLazyColumn.kt"
            line="48"
            column="15"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;PlannedPaymentRule> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `oneTime: ImmutableList&lt;PlannedPaymentRule>` or create an `@Immutable` wrapper for this class: `@Immutable data class OneTimeList(val items: List&lt;PlannedPaymentRule>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    oneTime: List&lt;PlannedPaymentRule>,"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsLazyColumn.kt"
            line="51"
            column="14"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;PlannedPaymentRule> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `recurring: ImmutableList&lt;PlannedPaymentRule>` or create an `@Immutable` wrapper for this class: `@Immutable data class RecurringList(val items: List&lt;PlannedPaymentRule>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    recurring: List&lt;PlannedPaymentRule>,"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsLazyColumn.kt"
            line="55"
            column="16"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Category> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `categories: ImmutableList&lt;Category>` or create an `@Immutable` wrapper for this class: `@Immutable data class CategoriesList(val items: List&lt;Category>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    categories: List&lt;Category>,"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsScreen.kt"
            line="69"
            column="17"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;Account> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `accounts: ImmutableList&lt;Account>` or create an `@Immutable` wrapper for this class: `@Immutable data class AccountsList(val items: List&lt;Account>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    accounts: List&lt;Account>,"
        errorLine2="              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsScreen.kt"
            line="70"
            column="15"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;PlannedPaymentRule> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `oneTime: ImmutableList&lt;PlannedPaymentRule>` or create an `@Immutable` wrapper for this class: `@Immutable data class OneTimeList(val items: List&lt;PlannedPaymentRule>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    oneTime: List&lt;PlannedPaymentRule>,"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsScreen.kt"
            line="72"
            column="14"/>
    </issue>

    <issue
        id="ComposeUnstableCollections"
        message="The Compose Compiler cannot infer the stability of a parameter if a List&lt;PlannedPaymentRule> is used in it, even if the item type is stable.&#xA;You should use Kotlinx Immutable Collections instead: `recurring: ImmutableList&lt;PlannedPaymentRule>` or create an `@Immutable` wrapper for this class: `@Immutable data class RecurringList(val items: List&lt;PlannedPaymentRule>)`&#xA;See https://slackhq.github.io/compose-lints/rules/#avoid-using-unstable-collections for more information."
        errorLine1="    recurring: List&lt;PlannedPaymentRule>,"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/ivy/planned/list/PlannedPaymentsScreen.kt"
            line="76"
            column="16"/>
    </issue>

</issues>
